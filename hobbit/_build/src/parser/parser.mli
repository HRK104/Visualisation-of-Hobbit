
(* The type of tokens. *)

type token = 
  | UNIT of ((Lexing.position * Lexing.position) )
  | UNDERSCORE of ((Lexing.position * Lexing.position) )
  | TRUE of ((Lexing.position * Lexing.position) )
  | TIMES of ((Lexing.position * Lexing.position) )
  | THEN of ((Lexing.position * Lexing.position) )
  | SYNC of ((Lexing.position * Lexing.position) )
  | SND of ((Lexing.position * Lexing.position) )
  | SEMI of ((Lexing.position * Lexing.position) )
  | RPAREN of ((Lexing.position * Lexing.position) )
  | REF of ((Lexing.position * Lexing.position) )
  | REC of ((Lexing.position * Lexing.position) )
  | RBRACKET of ((Lexing.position * Lexing.position) )
  | RBRACE of ((Lexing.position * Lexing.position) )
  | PLUS of ((Lexing.position * Lexing.position) )
  | PIPE of ((Lexing.position * Lexing.position) )
  | OR of ((Lexing.position * Lexing.position) )
  | NUMBER of ((Lexing.position * Lexing.position) * int)
  | NOT of ((Lexing.position * Lexing.position) )
  | NEQUAL of ((Lexing.position * Lexing.position) )
  | MOD of ((Lexing.position * Lexing.position) )
  | MINUS of ((Lexing.position * Lexing.position) )
  | LPAREN of ((Lexing.position * Lexing.position) )
  | LET of ((Lexing.position * Lexing.position) )
  | LESSEQ of ((Lexing.position * Lexing.position) )
  | LESS of ((Lexing.position * Lexing.position) )
  | LBRACKET of ((Lexing.position * Lexing.position) )
  | LBRACE of ((Lexing.position * Lexing.position) )
  | INT of ((Lexing.position * Lexing.position) )
  | IN of ((Lexing.position * Lexing.position) )
  | IMPLIES of ((Lexing.position * Lexing.position) )
  | IF of ((Lexing.position * Lexing.position) )
  | IDENT of ((Lexing.position * Lexing.position) * string)
  | GREATEREQ of ((Lexing.position * Lexing.position) )
  | GREATER of ((Lexing.position * Lexing.position) )
  | FUN of ((Lexing.position * Lexing.position) )
  | FST of ((Lexing.position * Lexing.position) )
  | FALSE of ((Lexing.position * Lexing.position) )
  | EQUIV of ((Lexing.position * Lexing.position) )
  | EQUAL of ((Lexing.position * Lexing.position) )
  | EOF of ((Lexing.position * Lexing.position) )
  | END of ((Lexing.position * Lexing.position) )
  | ELSE of ((Lexing.position * Lexing.position) )
  | DIV of ((Lexing.position * Lexing.position) )
  | COMMA of ((Lexing.position * Lexing.position) )
  | COLONEQUAL of ((Lexing.position * Lexing.position) )
  | BOT of ((Lexing.position * Lexing.position) )
  | BOOL of ((Lexing.position * Lexing.position) )
  | BEGIN of ((Lexing.position * Lexing.position) )
  | BANG of ((Lexing.position * Lexing.position) )
  | AS of ((Lexing.position * Lexing.position) )
  | ARROW of ((Lexing.position * Lexing.position) )
  | APPROXINV of ((Lexing.position * Lexing.position) )
  | APPROX of ((Lexing.position * Lexing.position) )
  | AND of ((Lexing.position * Lexing.position) )

(* This exception is raised by the monolithic API functions. *)

exception Error

(* The monolithic API. *)

val main: (Lexing.lexbuf -> token) -> Lexing.lexbuf -> (Ast.program)
